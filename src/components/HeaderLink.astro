---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'a'>;

const { href, class: className, ...props } = Astro.props;

const { pathname } = Astro.url;
// Matches path and subpath for Events etc.
console.log(pathname);
console.log(href);
// Funktion zum Entfernen des Trailing Slashes (falls vorhanden)
const normalizePath = (path: string): string => {
  return path.endsWith('/') ? path.slice(0, -1) : path;
};

// Normalisierte URLs f√ºr Vergleich
const isActive: boolean = href ? normalizePath(href.toString()) === normalizePath(pathname) : false;
---

<a href={href} class:list={[className, { active: isActive }]} {...props}>
	<slot />
	<span>href: {href}</span>
	<span>pathname: {pathname}</span>
</a>
<style>
	a {
		display: inline-block;
		text-decoration: none;
	}
	a.active {
		font-weight: bolder;
		text-decoration: underline;
	}
</style>
